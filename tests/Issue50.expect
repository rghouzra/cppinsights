template <class T>
void foo(T && t)
{ }

/* First instantiated from: Issue50.cpp:10 */
#ifdef INSIGHTS_USE_TEMPLATE
template<>
void foo<Test &>(Test & t)
{
}
#endif


struct Test
{
  // inline constexpr Test() noexcept = default;
  // inline constexpr Test(const Test &) = default;
  // inline constexpr Test(Test &&) = default;
};



int main()
{
  Test test = Test();
  foo(test);
  return 0;
}

