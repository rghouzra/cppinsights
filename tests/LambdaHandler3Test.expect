template<typename T>
int Is(const T x)
{
  return x(22);
}

/* First instantiated from: LambdaHandler3Test.cpp:10 */
#ifdef INSIGHTS_USE_TEMPLATE
template<>
int Is<__lambda_10_13>(const __lambda_10_13 x)
{
  return x.operator()(22);
}
#endif


int main()
{
  int y = 3;
      
  class __lambda_10_13
  {
    int & y;
    public: 
    inline /*constexpr */ int operator()(int x) const
    {
      return x + y;
    }
    
    public: __lambda_10_13(int & _y)
    : y{_y}
    {}
    
  };
  
  return Is(__lambda_10_13{y});
}


