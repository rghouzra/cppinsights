#define INSIGHTS_USE_TEMPLATE

template<typename T, bool array>
class Alloc
{
    const int z;
    T* data{nullptr};    
    const bool x{false};
    
public:
    Alloc() : z{2}
    {
    }
};

#ifdef INSIGHTS_USE_TEMPLATE
/* First instantiated from: CXXDefaultInitExprTest.cpp:18 */
template<>
class Alloc<int, 0>
{
  const int z;
  int * data;
  const bool x;
  
  public: 
  inline Alloc()
  : z{2}
  , data{nullptr}
  , x{false}
  {
  }
  
  // inline constexpr Alloc(const Alloc<int, 0> &) = default;
  // inline constexpr Alloc(Alloc<int, 0> &&) = default;
};

#endif


#ifdef INSIGHTS_USE_TEMPLATE
/* First instantiated from: CXXDefaultInitExprTest.cpp:19 */
template<>
class Alloc<char, 1>
{
  const int z;
  char * data;
  const bool x;
  
  public: 
  inline Alloc()
  : z{2}
  , data{nullptr}
  , x{false}
  {
  }
  
  // inline constexpr Alloc(const Alloc<char, 1> &) = default;
  // inline constexpr Alloc(Alloc<char, 1> &&) = default;
};

#endif


int main()
{
  Alloc<int, false> a = Alloc<int, 0>();
  Alloc<char, true> b = Alloc<char, 1>();
}

