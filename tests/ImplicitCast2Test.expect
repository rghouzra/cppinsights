void FloatingCast(double d)
{
}

void IntegralToBoolean(bool b)
{
}


// CK_UserDefinedConversion
struct A
{
  using retType_5_12 = int;
  inline operator retType_5_12 ()
  {
    return 2;
  }
  
  // inline constexpr A() noexcept = default;
  // inline constexpr A(const A &) = default;
  // inline constexpr A(A &&) = default;
  // inline ~A() noexcept = default;
};

 

int main()
{
  float f = 1.0f;
  FloatingCast(static_cast<double>(f));
  int i = 1;
  IntegralToBoolean(static_cast<bool>(i));
  int ii = int(static_cast<int>(A().operator int()));
}

