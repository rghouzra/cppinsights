class Base
{
  public: 
  // inline constexpr Base() noexcept = default;
  // inline ~Base() = default;
  // inline constexpr Base(const Base &) = default;
  // inline constexpr Base(Base &&) = default;
};



class Derived : public Base
{
  public: 
  // inline constexpr Derived() noexcept = default;
  // inline constexpr Derived(const Derived &) = default;
  // inline constexpr Derived(Derived &&) = default;
};




int main()
{
  Derived * d = {new Derived()};
  Base * b = static_cast<Base *>(d);
  Base * bb = {static_cast<Base *>(new Derived())};
}

