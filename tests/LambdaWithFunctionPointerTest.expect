// From: https://en.cppreference.com/w/cpp/language/lambda


class __lambda_3_12
{
  public: 
  template<class type_parameter_0_0>
  inline /*constexpr */ auto operator()(int (*fp)(int), type_parameter_0_0 a) const
  {
    return fp(a);
  }
  
  /* First instantiated from: LambdaWithFunctionPointerTest.cpp:7 */
  #ifdef INSIGHTS_USE_TEMPLATE
  template<>
  inline /*constexpr */ int operator()(int (*fp)(int), int a) const
  {
    return fp(a);
  }
  #endif
  
  private: 
  template<class type_parameter_0_0>
  static inline auto __invoke(int (*fp)(int), type_parameter_0_0 a)
  {
    return fp(a);
  }
  
};

__lambda_3_12 Fwd = __lambda_3_12{};



class __lambda_5_10
{
  public: 
  template<class type_parameter_0_0>
  inline /*constexpr */ auto operator()(type_parameter_0_0 a) const
  {
    return a;
  }
  
  /* First instantiated from: LambdaWithFunctionPointerTest.cpp:7 */
  #ifdef INSIGHTS_USE_TEMPLATE
  template<>
  inline /*constexpr */ int operator()(int a) const
  {
    return a;
  }
  #endif
  
  
  /* First instantiated from: LambdaWithFunctionPointerTest.cpp:7 */
  #ifdef INSIGHTS_USE_TEMPLATE
  using retType_5_10 = int (*)(int);
  template<>
  inline /*constexpr */ operator retType_5_10 () const
  {
    return __invoke;
  }
  #endif
  
  private: 
  template<class type_parameter_0_0>
  static inline auto __invoke(type_parameter_0_0 a)
  {
    return a;
  }
  
  #ifdef INSIGHTS_USE_TEMPLATE
  template<>
  static inline int __invoke(int a)
  {
    return a;
  }
  #endif
  
  
};

__lambda_5_10 C = __lambda_5_10{};


/* PASSED: static_assert(Fwd.operator()(static_cast<int (*)(int)>(C.operator __lambda_5_10::retType_5_10()), 3) == 3); */


